// Generated from java-escape by ANTLR 4.11.1
package org.merideum.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class MerideumLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, ASSIGN=2, BRACE_L=3, BRACE_R=4, BRACKET_L=5, BRACKET_R=6, COLON=7, 
		COMMA=8, CONST=9, CONTRACT=10, DOT=11, DOUBLE_QUOTE=12, MINUS=13, PAREN_L=14, 
		PAREN_R=15, REQUEST=16, RETURN=17, USE=18, VAR=19, IDENTIFIER=20, INT=21, 
		RESOURCE_NAME=22, TYPE=23, TYPE_LIST=24, USE_PATH=25, TEXT=26, S_EMBEDDED=27;
	public static final int
		IN_STRING=1, EMBEDDED=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "IN_STRING", "EMBEDDED"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WS", "ASSIGN", "BRACE_L", "BRACE_R", "BRACKET_L", "BRACKET_R", "COLON", 
			"COMMA", "CONST", "CONTRACT", "DOT", "DOUBLE_QUOTE", "MINUS", "PAREN_L", 
			"PAREN_R", "REQUEST", "RETURN", "USE", "VAR", "IDENTIFIER", "INT", "RESOURCE_NAME", 
			"TYPE", "TYPE_LIST", "USE_PATH", "TEXT", "S_EMBEDDED", "S_DOUBLE_QUOTE", 
			"E_IDENTIFIER", "E_BRACE_R"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'='", "'{'", null, "'['", "']'", "':'", "','", "'const'", 
			"'contract'", "'.'", null, "'-'", "'('", "')'", "'request'", "'return'", 
			"'use'", "'var'", null, null, null, null, null, null, null, "'${'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WS", "ASSIGN", "BRACE_L", "BRACE_R", "BRACKET_L", "BRACKET_R", 
			"COLON", "COMMA", "CONST", "CONTRACT", "DOT", "DOUBLE_QUOTE", "MINUS", 
			"PAREN_L", "PAREN_R", "REQUEST", "RETURN", "USE", "VAR", "IDENTIFIER", 
			"INT", "RESOURCE_NAME", "TYPE", "TYPE_LIST", "USE_PATH", "TEXT", "S_EMBEDDED"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MerideumLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MerideumLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00ce\u0006\uffff\uffff\u0006\uffff\uffff\u0006\uffff"+
		"\uffff\u0002\u0000\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007"+
		"\u0002\u0002\u0003\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007"+
		"\u0005\u0002\u0006\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b"+
		"\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007"+
		"\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002"+
		"\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002"+
		"\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002"+
		"\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0002"+
		"\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002\u001b\u0007\u001b\u0002"+
		"\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0001\u0000\u0004\u0000A\b"+
		"\u0000\u000b\u0000\f\u0000B\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001"+
		"\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t"+
		"\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0004\u0013\u0089\b\u0013"+
		"\u000b\u0013\f\u0013\u008a\u0001\u0014\u0001\u0014\u0005\u0014\u008f\b"+
		"\u0014\n\u0014\f\u0014\u0092\t\u0014\u0001\u0015\u0001\u0015\u0004\u0015"+
		"\u0096\b\u0015\u000b\u0015\f\u0015\u0097\u0001\u0016\u0001\u0016\u0003"+
		"\u0016\u009c\b\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0004\u0018\u00a4\b\u0018\u000b\u0018\f\u0018\u00a5"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0004\u0018\u00ab\b\u0018\u000b\u0018"+
		"\f\u0018\u00ac\u0004\u0018\u00af\b\u0018\u000b\u0018\f\u0018\u00b0\u0001"+
		"\u0019\u0004\u0019\u00b4\b\u0019\u000b\u0019\f\u0019\u00b5\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0004\u001c"+
		"\u00c4\b\u001c\u000b\u001c\f\u001c\u00c5\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0000\u0000\u001e"+
		"\u0003\u0001\u0005\u0002\u0007\u0003\t\u0004\u000b\u0005\r\u0006\u000f"+
		"\u0007\u0011\b\u0013\t\u0015\n\u0017\u000b\u0019\f\u001b\r\u001d\u000e"+
		"\u001f\u000f!\u0010#\u0011%\u0012\'\u0013)\u0014+\u0015-\u0016/\u0017"+
		"1\u00183\u00195\u001a7\u001b9\u0000;\u0000=\u0000\u0003\u0000\u0001\u0002"+
		"\t\u0003\u0000\t\n\r\r  \u0002\u0000AZaz\u0003\u000009AZaz\u0001\u0000"+
		"19\u0001\u000009\u0001\u0000AZ\u0002\u000009az\u0001\u0000az\u0003\u0000"+
		"\"\"$$\\\\\u00d5\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00015"+
		"\u0001\u0000\u0000\u0000\u00017\u0001\u0000\u0000\u0000\u00019\u0001\u0000"+
		"\u0000\u0000\u0002;\u0001\u0000\u0000\u0000\u0002=\u0001\u0000\u0000\u0000"+
		"\u0003@\u0001\u0000\u0000\u0000\u0005F\u0001\u0000\u0000\u0000\u0007H"+
		"\u0001\u0000\u0000\u0000\tJ\u0001\u0000\u0000\u0000\u000bL\u0001\u0000"+
		"\u0000\u0000\rN\u0001\u0000\u0000\u0000\u000fP\u0001\u0000\u0000\u0000"+
		"\u0011R\u0001\u0000\u0000\u0000\u0013T\u0001\u0000\u0000\u0000\u0015Z"+
		"\u0001\u0000\u0000\u0000\u0017c\u0001\u0000\u0000\u0000\u0019e\u0001\u0000"+
		"\u0000\u0000\u001bi\u0001\u0000\u0000\u0000\u001dk\u0001\u0000\u0000\u0000"+
		"\u001fm\u0001\u0000\u0000\u0000!o\u0001\u0000\u0000\u0000#w\u0001\u0000"+
		"\u0000\u0000%~\u0001\u0000\u0000\u0000\'\u0082\u0001\u0000\u0000\u0000"+
		")\u0086\u0001\u0000\u0000\u0000+\u008c\u0001\u0000\u0000\u0000-\u0093"+
		"\u0001\u0000\u0000\u0000/\u009b\u0001\u0000\u0000\u00001\u009d\u0001\u0000"+
		"\u0000\u00003\u00a1\u0001\u0000\u0000\u00005\u00b3\u0001\u0000\u0000\u0000"+
		"7\u00b7\u0001\u0000\u0000\u00009\u00bc\u0001\u0000\u0000\u0000;\u00c1"+
		"\u0001\u0000\u0000\u0000=\u00c9\u0001\u0000\u0000\u0000?A\u0007\u0000"+
		"\u0000\u0000@?\u0001\u0000\u0000\u0000AB\u0001\u0000\u0000\u0000B@\u0001"+
		"\u0000\u0000\u0000BC\u0001\u0000\u0000\u0000CD\u0001\u0000\u0000\u0000"+
		"DE\u0006\u0000\u0000\u0000E\u0004\u0001\u0000\u0000\u0000FG\u0005=\u0000"+
		"\u0000G\u0006\u0001\u0000\u0000\u0000HI\u0005{\u0000\u0000I\b\u0001\u0000"+
		"\u0000\u0000JK\u0005}\u0000\u0000K\n\u0001\u0000\u0000\u0000LM\u0005["+
		"\u0000\u0000M\f\u0001\u0000\u0000\u0000NO\u0005]\u0000\u0000O\u000e\u0001"+
		"\u0000\u0000\u0000PQ\u0005:\u0000\u0000Q\u0010\u0001\u0000\u0000\u0000"+
		"RS\u0005,\u0000\u0000S\u0012\u0001\u0000\u0000\u0000TU\u0005c\u0000\u0000"+
		"UV\u0005o\u0000\u0000VW\u0005n\u0000\u0000WX\u0005s\u0000\u0000XY\u0005"+
		"t\u0000\u0000Y\u0014\u0001\u0000\u0000\u0000Z[\u0005c\u0000\u0000[\\\u0005"+
		"o\u0000\u0000\\]\u0005n\u0000\u0000]^\u0005t\u0000\u0000^_\u0005r\u0000"+
		"\u0000_`\u0005a\u0000\u0000`a\u0005c\u0000\u0000ab\u0005t\u0000\u0000"+
		"b\u0016\u0001\u0000\u0000\u0000cd\u0005.\u0000\u0000d\u0018\u0001\u0000"+
		"\u0000\u0000ef\u0005\"\u0000\u0000fg\u0001\u0000\u0000\u0000gh\u0006\u000b"+
		"\u0001\u0000h\u001a\u0001\u0000\u0000\u0000ij\u0005-\u0000\u0000j\u001c"+
		"\u0001\u0000\u0000\u0000kl\u0005(\u0000\u0000l\u001e\u0001\u0000\u0000"+
		"\u0000mn\u0005)\u0000\u0000n \u0001\u0000\u0000\u0000op\u0005r\u0000\u0000"+
		"pq\u0005e\u0000\u0000qr\u0005q\u0000\u0000rs\u0005u\u0000\u0000st\u0005"+
		"e\u0000\u0000tu\u0005s\u0000\u0000uv\u0005t\u0000\u0000v\"\u0001\u0000"+
		"\u0000\u0000wx\u0005r\u0000\u0000xy\u0005e\u0000\u0000yz\u0005t\u0000"+
		"\u0000z{\u0005u\u0000\u0000{|\u0005r\u0000\u0000|}\u0005n\u0000\u0000"+
		"}$\u0001\u0000\u0000\u0000~\u007f\u0005u\u0000\u0000\u007f\u0080\u0005"+
		"s\u0000\u0000\u0080\u0081\u0005e\u0000\u0000\u0081&\u0001\u0000\u0000"+
		"\u0000\u0082\u0083\u0005v\u0000\u0000\u0083\u0084\u0005a\u0000\u0000\u0084"+
		"\u0085\u0005r\u0000\u0000\u0085(\u0001\u0000\u0000\u0000\u0086\u0088\u0007"+
		"\u0001\u0000\u0000\u0087\u0089\u0007\u0002\u0000\u0000\u0088\u0087\u0001"+
		"\u0000\u0000\u0000\u0089\u008a\u0001\u0000\u0000\u0000\u008a\u0088\u0001"+
		"\u0000\u0000\u0000\u008a\u008b\u0001\u0000\u0000\u0000\u008b*\u0001\u0000"+
		"\u0000\u0000\u008c\u0090\u0007\u0003\u0000\u0000\u008d\u008f\u0007\u0004"+
		"\u0000\u0000\u008e\u008d\u0001\u0000\u0000\u0000\u008f\u0092\u0001\u0000"+
		"\u0000\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0090\u0091\u0001\u0000"+
		"\u0000\u0000\u0091,\u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000"+
		"\u0000\u0093\u0095\u0007\u0005\u0000\u0000\u0094\u0096\u0007\u0006\u0000"+
		"\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000\u0000"+
		"\u0000\u0097\u0095\u0001\u0000\u0000\u0000\u0097\u0098\u0001\u0000\u0000"+
		"\u0000\u0098.\u0001\u0000\u0000\u0000\u0099\u009c\u0007\u0001\u0000\u0000"+
		"\u009a\u009c\u00031\u0017\u0000\u009b\u0099\u0001\u0000\u0000\u0000\u009b"+
		"\u009a\u0001\u0000\u0000\u0000\u009c0\u0001\u0000\u0000\u0000\u009d\u009e"+
		"\u0003\u000b\u0004\u0000\u009e\u009f\u0007\u0001\u0000\u0000\u009f\u00a0"+
		"\u0003\r\u0005\u0000\u00a02\u0001\u0000\u0000\u0000\u00a1\u00a3\u0007"+
		"\u0007\u0000\u0000\u00a2\u00a4\u0007\u0006\u0000\u0000\u00a3\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a5\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001"+
		"\u0000\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00ae\u0001"+
		"\u0000\u0000\u0000\u00a7\u00a8\u0003\u0017\n\u0000\u00a8\u00aa\u0007\u0007"+
		"\u0000\u0000\u00a9\u00ab\u0007\u0006\u0000\u0000\u00aa\u00a9\u0001\u0000"+
		"\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000"+
		"\u0000\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00af\u0001\u0000"+
		"\u0000\u0000\u00ae\u00a7\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000"+
		"\u0000\u0000\u00b0\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000"+
		"\u0000\u0000\u00b14\u0001\u0000\u0000\u0000\u00b2\u00b4\b\b\u0000\u0000"+
		"\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000"+
		"\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b66\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005$\u0000\u0000\u00b8\u00b9"+
		"\u0005{\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00ba\u00bb\u0006"+
		"\u001a\u0002\u0000\u00bb8\u0001\u0000\u0000\u0000\u00bc\u00bd\u0005\""+
		"\u0000\u0000\u00bd\u00be\u0001\u0000\u0000\u0000\u00be\u00bf\u0006\u001b"+
		"\u0003\u0000\u00bf\u00c0\u0006\u001b\u0004\u0000\u00c0:\u0001\u0000\u0000"+
		"\u0000\u00c1\u00c3\u0007\u0007\u0000\u0000\u00c2\u00c4\u0007\u0002\u0000"+
		"\u0000\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000"+
		"\u0000\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006\u001c\u0005"+
		"\u0000\u00c8<\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005}\u0000\u0000\u00ca"+
		"\u00cb\u0001\u0000\u0000\u0000\u00cb\u00cc\u0006\u001d\u0006\u0000\u00cc"+
		"\u00cd\u0006\u001d\u0004\u0000\u00cd>\u0001\u0000\u0000\u0000\r\u0000"+
		"\u0001\u0002B\u008a\u0090\u0097\u009b\u00a5\u00ac\u00b0\u00b5\u00c5\u0007"+
		"\u0006\u0000\u0000\u0005\u0001\u0000\u0005\u0002\u0000\u0007\f\u0000\u0004"+
		"\u0000\u0000\u0007\u0014\u0000\u0007\u0004\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}